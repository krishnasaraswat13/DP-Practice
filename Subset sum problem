//{ Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {

            String input_line[] = read.readLine().trim().split("\\s+");
            int N = input_line.length;
            int arr[] = new int[N];
            for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(input_line[i]);
            int sum = Integer.parseInt(read.readLine());

            Solution ob = new Solution();
            if (ob.isSubsetSum(arr, sum))
                System.out.println("true");
            else
                System.out.println("false");

            System.out.println("~");
        }
    }
}

// } Driver Code Ends


class Solution {
    static Boolean isSubsetSum(int arr[], int sum) {
        // code here
        int dp[][]=new int[arr.length][sum+1];
        dp[0][0]=1;
         if(arr[0]<=sum){
             dp[0][arr[0]]=1;
         }
        for(int i=1;i<dp.length;i++){
            for(int j=0;j<dp[0].length;j++){
                if(dp[i-1][j]==1 ){
                    dp[i][j]=1;
                }
                
                if(j-arr[i]>=0 && dp[i-1][j-arr[i]]==1){
                    dp[i][j]=1;
                }
            }
        }
        if(dp[arr.length-1][sum]==1){
            return true;
        }
        return false;
        
    }
}