// User function Template for Java

class Solution {
    public int maximumPoints(int arr[][]) {
        // code here
        int dp[][]=new int[arr.length][arr[0].length];
        for(int i=0;i<arr[0].length;i++){
            dp[0][i]=arr[0][i];
        }
        for(int i=1;i<arr.length;i++){
            for(int j=0;j<arr[0].length;j++){
                int max=0;
                for(int k=0;k<arr[0].length;k++){
                    if(j==k){
                        continue;
                    }
                    else{
                         max=Math.max(max,dp[i-1][k]);
                    }
                }
                dp[i][j]=arr[i][j]+max;
               
            }
        }
        int ans=0;
        for(int i=0;i<dp[0].length;i++){
            ans=Math.max(ans,dp[dp.length-1][i]);
        }
        return ans;
    }
}

///bottom up space efficient
// User function Template for Java

class Solution {
    public int maximumPoints(int arr[][]) {
        // code here
        int dp[]=new int[arr[0].length];
        for(int i=0;i<arr[0].length;i++){
            dp[i]=arr[0][i];
        }
        for(int i=1;i<arr.length;i++){
            int temp[]=new int[arr[0].length];
            for(int j=0;j<arr[0].length;j++){
                int max=0;
                for(int k=0;k<arr[0].length;k++){
                    if(j==k){
                        continue;
                    }
                    else{
                         max=Math.max(max,dp[k]);
                    }
                }
                temp[j]=arr[i][j]+max;
               
            }
            dp=temp;
        }
        int ans=0;
        for(int i=0;i<dp.length;i++){
            ans=Math.max(ans,dp[i]);
        }
        return ans;
    }
}